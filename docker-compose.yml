
services:
  db:
    container_name: "db"
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  db_test:
    container_name: "db_test"
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres_test
      - POSTGRES_PASSWORD=postgres_test
      - POSTGRES_DB=postgres_test
    ports:
      - "5433:5432"

  react:
    build:
      context: .
      dockerfile: Dockerfiles/React
    restart: "always"
    ports:
      - "3000:3000"

  python:
    build:
      context: .
      dockerfile: Dockerfiles/Python
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  nginx:
    build:
      context: .
      dockerfile: Dockerfiles/Nginx
    restart: "always"
    ports:
      - "81:80"
    depends_on:
      - python
      - react

#  redis:
#    container_name: "redis"
#    image: redis:latest
#    restart: always
#    ports:
#      - "6379:6379"
#
#  rabbitmq:
#    image: rabbitmq:3.10.7-management
#    ports:
#      - "15672:15672"
